/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.5.v20170502
 * Generated at: 2023-05-25 15:03:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import br.com.fiapchallenge.infra.ConnectionFactory;
import java.sql.Connection;
import br.com.fiapchallenge.dao.GastosDAO.GastosDAO;
import br.com.fiapchallenge.dao.RendaMensalDAO.RendaMensalDAO;
import java.util.*;
import br.com.fiapchallenge.model.Gastos;
import br.com.fiapchallenge.model.RendaMensal;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1685026988790L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("br.com.fiapchallenge.infra.ConnectionFactory");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("br.com.fiapchallenge.dao.GastosDAO.GastosDAO");
    _jspx_imports_classes.add("br.com.fiapchallenge.dao.RendaMensalDAO.RendaMensalDAO");
    _jspx_imports_classes.add("br.com.fiapchallenge.model.RendaMensal");
    _jspx_imports_classes.add("br.com.fiapchallenge.model.Gastos");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Navbar with bootstrap</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body >\r\n");
      out.write("   <nav class=\"navbar navbar-expand-lg bg-body-black\">\r\n");
      out.write("     <div class=\"container-fluid\">\r\n");
      out.write("       <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n");
      out.write("       <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("         <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("       </button>\r\n");
      out.write("       <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n");
      out.write("         <div class=\"navbar-nav\">\r\n");
      out.write("           <a class=\"nav-link active\" aria-current=\"page\" href=\"/fintech/home\">Home</a>\r\n");
      out.write("           <a class=\"nav-link\" href=\"add-gasto.html\">novo gasto</a>\r\n");
      out.write("           <a class=\"nav-link\" href=\"add-rendaMensal.html\">nova Entrada</a>\r\n");
      out.write("         </div>\r\n");
      out.write("       </div>\r\n");
      out.write("     </div>\r\n");
      out.write("   </nav>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("<head>\r\n");
      out.write("    <style>\r\n");
      out.write("        table {\r\n");
      out.write("          font-family: arial, sans-serif;\r\n");
      out.write("          border-collapse: collapse;\r\n");
      out.write("          width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td, th {\r\n");
      out.write("          border: 1px solid #dddddd;\r\n");
      out.write("          text-align: left;\r\n");
      out.write("          padding: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:nth-child(even) {\r\n");
      out.write("          background-color: #dddddd;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>\r\n");
      out.write("           Gastos Total R$ : - ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gastos}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("    </h1>\r\n");
      out.write("\r\n");
      out.write("        <h1>\r\n");
      out.write("               Entrada Total R$ : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${renda}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("        </h1>\r\n");
      out.write("\r\n");
      out.write("<a href=\"add-gasto.html\" >adicionar novo gasto</a>\r\n");
      out.write("<a href=\"add-rendaMensal.html\" >adicionar nova entrada</a>\r\n");
      out.write("\r\n");
      out.write("    <table>\r\n");
      out.write("    <h1>Gastos</h1>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Descricao</th>\r\n");
      out.write("            <th>Data</th>\r\n");
      out.write("            <th>Valor</th>\r\n");
      out.write("            <th>conta</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("    ");

        Connection connection = ConnectionFactory.getConnection();
              GastosDAO dao = new GastosDAO(connection);
              List<Gastos> gastos = dao.findAll();

              for(Gastos gasto : gastos){
    
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td>");
      out.print( gasto.getGastos() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( gasto.getData() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( gasto.getValor() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( gasto.getConta() );
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("\r\n");
      out.write("    ");

    }
    
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("     <table>\r\n");
      out.write("          <h1>Entrada</h1>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Descricao</th>\r\n");
      out.write("                <th>Data</th>\r\n");
      out.write("                <th>Valor</th>\r\n");
      out.write("                <th>conta</th>\r\n");
      out.write("                <th>usuario</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        ");


               RendaMensalDAO rendadao = new RendaMensalDAO(connection);
               List<RendaMensal> rendas = rendadao.findAll();


                  for(RendaMensal renda : rendas){
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( renda.getRenda() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( renda.getData() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( renda.getRendaMensal() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( renda.getConta() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( renda.getUsuario() );
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
